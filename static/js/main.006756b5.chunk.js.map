{"version":3,"sources":["components/OnlineStatus.js","components/NavBar.js","components/MainMenu.js","components/Map.js","serviceWorker.js","index.js","components/App.js"],"names":["useStyles","makeStyles","theme","online","color","offline","OnlineStatus","classes","useState","navigator","onLine","setOnline","window","addEventListener","Wifi","className","WifiOff","root","flexGrow","menuButton","marginRight","spacing","title","NavBar","onClick","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","Button","open","container","display","flexDirection","flexWrap","width","textField","marginLeft","border","sideList","maxWidth","nested","paddingLeft","MainMenu","map","menuOpen","setMenuOpen","isLoading","setLoading","listItemIndex","setListItemIndex","collapseOpen","setCollapseOpen","windLayer","useRef","toggleMenu","isOpen","handleCollapseClick","menuItems","text","IconComponent","Eco","event","current","hasLayer","removeFrom","addTo","now","Date","formattedDate","toISOString","split","replace","formattedHour","getUTCHours","slice","fetch","then","response","json","data","VelocityLayer","displayOptions","speedUnit","lineWidth","maxVelocity","MailIcon","subItems","List","component","disablePadding","ListItem","button","ListItemIcon","StarBorder","ListItemText","primary","target","console","log","Drawer","anchor","onClose","index","key","disabled","selected","handleListItemClick","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","Map","updateMap","innerHeight","divHeight","setDivHeight","updateHeight","mainHeight","offset","getComputedStyle","parentElement","firstChild","height","fitHeight","Number","useEffect","newMap","center","zoom","maxBounds","Infinity","maxZoom","minZoom","tileLayer","id","style","ref","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","setMap","CssBaseline","mainMap","document","getElementById","URL","process","href","origin","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.006756b5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Wifi, WifiOff } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  online: {\r\n    color: \"green\"\r\n  },\r\n  offline: {\r\n    color: \"red\"\r\n  }\r\n}));\r\n\r\nexport default function OnlineStatus() {\r\n  const classes = useStyles();\r\n  const [online, setOnline] = useState(navigator.onLine);\r\n\r\n  window.addEventListener(\"online\", () => {\r\n    setOnline(true);\r\n  });\r\n\r\n  window.addEventListener(\"offline\", () => {\r\n    setOnline(false);\r\n  });\r\n\r\n  return online ? <Wifi className={classes.online} /> : <WifiOff className={classes.offline} />\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Typography, Button, IconButton } from '@material-ui/core/';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport OnlineStatus from './OnlineStatus';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function NavBar({ onClick }) {\r\n  const classes = useStyles();\r\n\r\n  const onLogin = () => {\r\n    window.open(\"https://www.google.com/nonprofits/account/home?hl=pt-BR\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton onClick={onClick} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Monitoring\r\n          </Typography>\r\n          <OnlineStatus />\r\n          <Button color=\"inherit\" onClick={onLogin}>Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useState, useRef, Fragment } from 'react';\r\nimport NavBar from \"./NavBar\";\r\n\r\nimport {\r\n  Collapse,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\n\r\nimport { ExpandLess, ExpandMore, Mail as MailIcon, Eco, StarBorder } from \"@material-ui/icons\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { VelocityLayer } from \"leafwind\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: \"column\",\r\n    flexWrap: 'wrap',\r\n    width: \"fit-content\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n    border: 100,\r\n  },\r\n  sideList: {\r\n    width: \"100%\",\r\n    maxWidth: 300\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nexport default function MainMenu({ map }) {\r\n  const classes = useStyles();\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [listItemIndex, setListItemIndex] = useState(0);\r\n  const [collapseOpen, setCollapseOpen] = useState(false);\r\n  const windLayer = useRef();\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(isOpen => !isOpen);\r\n  };\r\n\r\n  const handleListItemClick = (event, index, onClick = () => {}, subItems) => {\r\n    setListItemIndex(index);\r\n    onClick(event);\r\n    subItems && handleCollapseClick();\r\n  }\r\n\r\n  const handleCollapseClick = () => {\r\n    setCollapseOpen(!collapseOpen);\r\n  }\r\n\r\n  const menuItems = [\r\n    {\r\n      text: 'Wind',\r\n      IconComponent: Eco,\r\n      onClick: function(event) {\r\n        setLoading(true);\r\n\r\n        // this.selected = !this.selected;\r\n        const { current } = windLayer;\r\n\r\n        if (current) {\r\n          setLoading(false);\r\n\r\n          if (map.hasLayer(current)) {\r\n            return void current.removeFrom(map);\r\n          }\r\n\r\n          return void current.addTo(map);\r\n        }\r\n\r\n        const now = new Date();\r\n        const formattedDate = now.toISOString().split(\"T\")[0].replace(/-/g, \"\");\r\n        const formattedHour = `0${now.getUTCHours()}`.slice(-2); // Ensures double digit.\r\n\r\n        fetch(`https://b2cforecast.climatempo.com.br/datas/windy/global/${formattedDate}/${formattedHour}_10m.json`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            const { current } = windLayer;\r\n\r\n            if (current) current.removeFrom(map);\r\n\r\n            windLayer.current = new VelocityLayer({\r\n              data: data,\r\n              displayOptions: {\r\n                speedUnit: 'km/h'\r\n              },\r\n              lineWidth: 2,\r\n              maxVelocity: 100,\r\n            }).addTo(map);\r\n\r\n            setLoading(false);\r\n        });\r\n      }\r\n    },\r\n    {\r\n      text: 'Mail',\r\n      IconComponent: MailIcon,\r\n      subItems:\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon>\r\n                <StarBorder />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Starred\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon>\r\n                <StarBorder />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Starred\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon>\r\n                <StarBorder />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Starred\" />\r\n            </ListItem>\r\n          </List>,\r\n      onClick: function(event) {\r\n        const { target } = event;\r\n        console.log(target);\r\n      }\r\n    },\r\n    {\r\n      text: 'Spam',\r\n      IconComponent: Eco,\r\n      onClick: function(event) {\r\n        const { target } = event;\r\n        console.log(target);\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <NavBar onClick={toggleMenu} />\r\n      <Drawer anchor=\"left\" open={menuOpen} onClose={toggleMenu}>\r\n        <List component=\"nav\" className={classes.sideList}>\r\n          {menuItems.map(({ text, onClick, IconComponent, subItems }, index) => (\r\n            <Fragment key={index}>\r\n              <ListItem button\r\n                disabled={isLoading}\r\n                key={index}\r\n                selected={listItemIndex === index}\r\n                onClick={event => handleListItemClick(event, index, onClick, subItems)}\r\n              >\r\n                <ListItemIcon><IconComponent /></ListItemIcon>\r\n                <ListItemText primary={text} />\r\n                {subItems && (collapseOpen ? <ExpandLess /> : <ExpandMore />)}\r\n              </ListItem>\r\n              {subItems && <Collapse in={collapseOpen} timeout=\"auto\" unmountOnExit>\r\n                {subItems}\r\n              </Collapse>}\r\n            </Fragment>\r\n          ), menuItems)}\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { map, tileLayer } from \"leaflet\";\r\n\r\nexport default function Map({ map: mainMap, updateMap }) {\r\n  const [divHeight, setDivHeight] = useState(window.innerHeight);\r\n  const container = useRef();\r\n\r\n  // const addWMSLayer = (url, options, target) => {\r\n  //   tileLayer.wms(url, options).addTo(target);\r\n  // }\r\n\r\n  const updateHeight = () => {\r\n    const { innerHeight: mainHeight } = window;\r\n    const { height: offset } = getComputedStyle(container.current.parentElement.firstChild);\r\n    const fitHeight = mainHeight - Number(offset.slice(0, -2));\r\n\r\n    setDivHeight(fitHeight);\r\n  }\r\n\r\n  const renderMap = () => {\r\n    updateHeight();\r\n\r\n    const newMap = map(container.current, {\r\n      center: [-23.547778, -46.635833],\r\n      zoom: 4,\r\n      maxBounds: [\r\n        [-180, Infinity],\r\n        [180, -Infinity]\r\n      ],\r\n      maxZoom: 16,\r\n      minZoom: 3\r\n    });\r\n\r\n    updateMap(newMap);\r\n\r\n    tileLayer(\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\").addTo(newMap);\r\n  }\r\n\r\n  useEffect(renderMap, [container]);\r\n\r\n  window.addEventListener(\"resize\", updateHeight);\r\n\r\n  return (\r\n    <div id=\"map\" style={{ height: divHeight }} ref={container} />\r\n  );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// Polyfills for IE support\r\nimport 'core-js/es/map';\r\nimport 'core-js/es/set';\r\nimport 'core-js/stable/promise';\r\nimport 'whatwg-fetch';\r\n\r\nimport React, { useState } from 'react';\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport 'typeface-roboto';\r\nimport MainMenu from './MainMenu';\r\nimport Map from './Map';\r\n\r\nexport default function App() {\r\n  const [map, setMap] = useState();\r\n  const updateMap = newMap => setMap(newMap);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <MainMenu map={map} />\r\n      <Map mainMap={map} updateMap={updateMap} />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}